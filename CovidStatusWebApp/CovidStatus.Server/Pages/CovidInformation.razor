@page "/"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using CovidStatus.Shared.Entities
@using CovidStatus.Shared.Enum

@inherits CovidStatus.Server.Pages.Bases.CovidStatusBase

@if (SelectedCounty == null || CovidDataList == null)
{
    <h4>Loading...</h4>
}
else
{
    <div class="container">
        <div class="row justify-content-end">
            <div class="col-6 rightAlignText">
                Last Update Date: @String.Format("{0:MMMM d, yyyy}", LastUpdateDate)
            </div>
        </div>
        <div class="row justify-content-start">
            <div class="col-4">
                <SfDropDownList TValue="byte"
                                TItem="County"
                                Placeholder="Select County:"
                                FloatLabelType="@FloatLabelType.Auto"
                                AllowFiltering="true"
                                DataSource="@CountyList"
                                CssClass="e-bold-label"
                                Value="@DefaultCounty">
                    <DropDownListFieldSettings Text="CountyName" Value="CountyID"></DropDownListFieldSettings>
                    <DropDownListEvents TValue="byte" ValueChange="OnCountyChanged"></DropDownListEvents>
                </SfDropDownList>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-6">
                <div class="row">
                    <div class="col-6">
                        <h5>County:</h5>
                        <p class="boldFont">@SelectedCounty.CountyName</p>
                    </div>
                    <div class="col-6">
                        <h5>Population:</h5>
                        <p class="boldFont">@SelectedCounty.Population.ToString("N0")</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <p>Current Risk Level Based On Cases Per 100k Population:</p>
                        @if (@SelectedCounty.CurrentRiskLevel == RiskLevel.Widespread)
                        {
                            <p class="roundedLabel widespreadBackgroundColor">Widespread</p>
                        }
                        else if (@SelectedCounty.CurrentRiskLevel == RiskLevel.Substantial)
                        {
                            <p class="roundedLabel substantialBackgroundColor">Substantial</p>
                        }
                        else if (@SelectedCounty.CurrentRiskLevel == RiskLevel.Moderate)
                        {
                            <p class="roundedLabel moderateBackgroundColor">Moderate</p>
                        }
                        else if (@SelectedCounty.CurrentRiskLevel == RiskLevel.Minimal)
                        {
                            <p class="roundedLabel minimalBackgroundColor">Minimal</p>
                        }
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="row">
                    <div class="col d-flex justify-content-center centeredText">
                        <h5>7-Day Moving Averages</h5>
                    </div>
                </div>
                <div class="row" style="background-color: #f9f9f9; border-radius: 15px;">
                    <div class="col">
                        <div class="row">
                            <div class="col-6 d-flex justify-content-center centeredText">
                                <p class="boldFont">Cases per 100k population:</p>
                            </div>
                            <div class="col-6 d-flex justify-content-center centeredText">
                                <p class="boldFont">Rate Change:</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-6 d-flex justify-content-center centeredText">
                                <p class="boldFont">@SelectedCounty.SevenDayMovingCasesPerOneHundredThousandAverage?.ToString("N2")</p>
                            </div>
                            <div class="col-6 d-flex justify-content-center centeredText">
                                @if (SelectedCounty.SevenDayMovingRateChange > 0)
                                {
                                    <p class="boldFont" style="color: red">@SelectedCounty.SevenDayMovingRateChange?.ToString("P2")</p>
                                }
                                else if (SelectedCounty.SevenDayMovingRateChange < 0)
                                {
                                    <p class="boldFont" style="color: green">@SelectedCounty.SevenDayMovingRateChange?.ToString("P2")</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />        
        <br />
        @if (SelectedCounty.RiskLevels != null)
        {
            <div>
                <div class="row">
                    <div class="col-3 d-flex justify-content-center centeredText">
                        <h5>Risk Level</h5>
                    </div>
                    <div class="col-3 d-flex justify-content-center centeredText">
                        <h5>New Cases per 100k</h5>
                    </div>
                    <div class="col-3 d-flex justify-content-center centeredText">
                        <h5>Estimated Qualified Date</h5>
                    </div>
                    <div class="col-3 d-flex justify-content-center centeredText">
                        <h5>Estimated Qualified Date (With CA risk level waiting time)</h5>
                    </div>
                </div>
                <div class="row widespreadBackgroundLightColor centeredText riskLevelRow">
                    <div class="col-3 d-flex justify-content-center">
                        <p class="roundedLabel widespreadBackgroundColor">Widespread</p>
                    </div>
                    <div class="col-3 d-flex justify-content-center">
                        More than @SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Widespread)?.RiskLelvelCasesMin
                    </div>
                    <div class="col-3 d-flex justify-content-center">
                        @String.Format("{0:MMMM d, yyyy}", SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Widespread)?.EstimateRiskLevelDate)
                    </div>
                    <div class="col-3 d-flex justify-content-center">
                        @String.Format("{0:MMMM d, yyyy}", SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Widespread)?.EstimateRiskLevelDateQualification)
                    </div>
                </div>
                <div class="row substantialBackgroundLightColor centeredText riskLevelRow">
                    <div class="col-3 d-flex justify-content-center">
                        <p class="roundedLabel substantialBackgroundColor">Substantial</p>
                    </div>
                    <div class="col-3 d-flex justify-content-center">
                        @SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Substantial)?.RiskLelvelCasesMin - @SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Substantial)?.RiskLelvelCasesMax
                    </div>
                    <div class="col-3 d-flex justify-content-center">
                        @String.Format("{0:MMMM d, yyyy}", SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Substantial)?.EstimateRiskLevelDate)
                    </div>
                    <div class="col-3 d-flex justify-content-center">
                        @String.Format("{0:MMMM d, yyyy}", SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Substantial)?.EstimateRiskLevelDateQualification)
                    </div>
                </div>
                <div class="row moderateBackgroundLightColor centeredText riskLevelRow">
                    <div class="col-3 d-flex justify-content-center">
                        <p class="roundedLabel moderateBackgroundColor">Moderate</p>
                    </div>
                    <div class="col-3 d-flex justify-content-center">
                        @SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Moderate)?.RiskLelvelCasesMin - @SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Moderate)?.RiskLelvelCasesMax
                    </div>
                    <div class="col-3 d-flex justify-content-center">
                        @String.Format("{0:MMMM d, yyyy}", SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Moderate)?.EstimateRiskLevelDate)
                    </div>
                    <div class="col-3 d-flex justify-content-center">
                        @String.Format("{0:MMMM d, yyyy}", SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Moderate)?.EstimateRiskLevelDateQualification)
                    </div>
                </div>
                <div class="row minimalBackgroundLightColor centeredText riskLevelRow">
                    <div class="col-3 d-flex justify-content-center">
                        <p class="roundedLabel minimalBackgroundColor">Minimal</p>
                    </div>
                    <div class="col-3 d-flex justify-content-center">
                        Less than @SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Minimal)?.RiskLelvelCasesMax
                    </div>
                    <div class="col-3 d-flex justify-content-center">
                        @String.Format("{0:MMMM d, yyyy}", SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Minimal)?.EstimateRiskLevelDate)
                    </div>
                    <div class="col-3 d-flex justify-content-center">
                        @String.Format("{0:MMMM d, yyyy}", SelectedCounty.RiskLevels.FirstOrDefault(x => x.RiskLevel == RiskLevel.Minimal)?.EstimateRiskLevelDateQualification)
                    </div>
                </div>
            </div>
        }
        <br />
        <div class="row">
            <div class="col-2">
                <h5>COVID Data</h5>
            </div>
            <div class="col-10 d-flex justify-content-end">
                <SfButton OnClick="ExcelExport" Content="Excel Export"></SfButton>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <SfGrid @ref="CovidDataGrid" DataSource="@CovidDataList" AllowPaging="true" AllowTextWrap="true" AllowExcelExport="true" AllowResizing="true">
                    <GridPageSettings PageSize="7"></GridPageSettings>
                    <GridColumns>
                        <GridColumn Field=@nameof(CovidData.ID) IsPrimaryKey="true" Visible="false" HeaderText="Data ID" Width="120"></GridColumn>
                        <GridColumn Field=@nameof(CovidData.County) Visible="false" HeaderText="County Name" Width="120"></GridColumn>
                        <GridColumn Field=@nameof(CovidData.Date) Format="d" HeaderText="Date" Width="100"></GridColumn>
                        <GridColumn Field=@nameof(CovidData.NewCountConfirmed) HeaderText="New Count Confirmed" Width="100"></GridColumn>
                        <GridColumn HeaderText="7 Day Moving">
                            <GridColumns>
                                <GridColumn Field=@nameof(CovidData.SevenDayMovingAverage) Format="N2" HeaderText="Cases" Width="100"></GridColumn>
                                <GridColumn Field=@nameof(CovidData.SevenDayMovingCasesPerOneHundredThousand) Format="N2" HeaderText="Cases Per 100k Population" Width="100"></GridColumn>
                                <GridColumn Field=@nameof(CovidData.SevenDayMovingRateChange) Format="P2" HeaderText="Rate Change" Width="100"></GridColumn>
                            </GridColumns>
                        </GridColumn>
                    </GridColumns>
                </SfGrid>
            </div>
        </div>

    </div>
}